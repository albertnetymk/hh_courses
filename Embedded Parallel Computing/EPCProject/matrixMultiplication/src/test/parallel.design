package test;
import astruct.pcie.Vio;
import parallel.Distribute;
import parallel.Rotation;
import parallel.Add;
import parallel.Assembler;
import parallel.AssemDistri;
interface Root {}
binding CRoot implements Root {
Vio Vio = {
	numSources = 2,
	numSinks = 1
};
Distribute matrixA1 = {level = Level.A1};
Distribute matrixB1 = {level = Level.B1};
channel c_0 = {Vio.out[0], matrixA1.in};
channel c_1 = {Vio.out[1], matrixB1.in};

Distribute levelA1 = {level = Level.A2};
Distribute levelA2 = {level = Level.A2};
Distribute levelA3 = {level = Level.A2};
Distribute levelA4 = {level = Level.A2};
Distribute levelB1 = {level = Level.B2};
Distribute levelB2 = {level = Level.B2};
Distribute levelB3 = {level = Level.B2};
Distribute levelB4 = {level = Level.B2};

channel c_2 = {matrixA1.out_1, levelA1.in};
channel c_3 = {matrixA1.out_2, levelA2.in};
channel c_4 = {matrixA1.out_3, levelA3.in};
channel c_5 = {matrixA1.out_4, levelA4.in};
channel c_6 = {matrixB1.out_1, levelB1.in};
channel c_7 = {matrixB1.out_2, levelB2.in};
channel c_8 = {matrixB1.out_3, levelB3.in};
channel c_9 = {matrixB1.out_4, levelB4.in};

Rotation r1 = {r=0};
Rotation r2 = {r=1};
Rotation r3 = {r=2};
Rotation r4 = {r=3};
Rotation r5 = {r=4};
Rotation r6 = {r=5};
Rotation r7 = {r=6};
Rotation r8 = {r=7};
Rotation r9 = {r=8};
Rotation r10 = {r=9};
Rotation r11 = {r=10};
Rotation r12 = {r=11};
Rotation r13 = {r=12};
Rotation r14 = {r=13};
Rotation r15 = {r=14};
Rotation r16 = {r=15};
channel c_10 = {levelA1.out_1, r1.in};
channel c_11 = {levelA1.out_2, r2.in};
channel c_12 = {levelA1.out_3, r3.in};
channel c_13 = {levelA1.out_4, r4.in};
channel c_14 = {levelA2.out_1, r5.in};
channel c_15 = {levelA2.out_2, r6.in};
channel c_16 = {levelA2.out_3, r7.in};
channel c_17 = {levelA2.out_4, r8.in};
channel c_18 = {levelA3.out_1, r9.in};
channel c_19 = {levelA3.out_2, r10.in};
channel c_20 = {levelA3.out_3, r11.in};
channel c_21 = {levelA3.out_4, r12.in};
channel c_22 = {levelA4.out_1, r13.in};
channel c_23 = {levelA4.out_2, r14.in};
channel c_24 = {levelA4.out_3, r15.in};
channel c_25 = {levelA4.out_4, r16.in};

Rotation c1 = {r=0};
Rotation c2 = {r=1};
Rotation c3 = {r=2};
Rotation c4 = {r=3};
Rotation c5 = {r=4};
Rotation c6 = {r=5};
Rotation c7 = {r=6};
Rotation c8 = {r=7};
Rotation c9 = {r=8};
Rotation c10 = {r=9};
Rotation c11 = {r=10};
Rotation c12 = {r=11};
Rotation c13 = {r=12};
Rotation c14 = {r=13};
Rotation c15 = {r=14};
Rotation c16 = {r=15};
channel c_26 = {levelB1.out_1, c1.in};
channel c_27 = {levelB1.out_2, c2.in};
channel c_28 = {levelB1.out_3, c3.in};
channel c_29 = {levelB1.out_4, c4.in};
channel c_30 = {levelB2.out_1, c5.in};
channel c_31 = {levelB2.out_2, c6.in};
channel c_32 = {levelB2.out_3, c7.in};
channel c_33 = {levelB2.out_4, c8.in};
channel c_34 = {levelB3.out_1, c9.in};
channel c_35 = {levelB3.out_2, c10.in};
channel c_36 = {levelB3.out_3, c11.in};
channel c_37 = {levelB3.out_4, c12.in};
channel c_38 = {levelB4.out_1, c13.in};
channel c_39 = {levelB4.out_2, c14.in};
channel c_40 = {levelB4.out_3, c15.in};
channel c_41 = {levelB4.out_4, c16.in};

Add a1;
Add a2;
Add a3;
Add a4;
Add a5;
Add a6;
Add a7;
Add a8;
Add a9;
Add a10;
Add a11;
Add a12;
Add a13;
Add a14;
Add a15;
Add a16;
channel c_42 = {r1.out, a1.in_r};
channel c_43 = {r2.out, a2.in_r};
channel c_44 = {r3.out, a3.in_r};
channel c_45 = {r4.out, a4.in_r};
channel c_46 = {r5.out, a5.in_r};
channel c_47 = {r6.out, a6.in_r};
channel c_48 = {r7.out, a7.in_r};
channel c_49 = {r8.out, a8.in_r};
channel c_50 = {r9.out, a9.in_r};
channel c_51 = {r10.out, a10.in_r};
channel c_52 = {r11.out, a11.in_r};
channel c_53 = {r12.out, a12.in_r};
channel c_54 = {r13.out, a13.in_r};
channel c_55 = {r14.out, a14.in_r};
channel c_56 = {r15.out, a15.in_r};
channel c_57 = {r16.out, a16.in_r};

Assembler assembler1 = {level=1};
Assembler assembler2 = {level=1};
Assembler assembler3 = {level=1};
Assembler assembler4 = {level=1};
channel c_58 = {c1.out, assembler1.in_1};
channel c_59 = {c2.out, assembler1.in_2};
channel c_60 = {c3.out, assembler1.in_3};
channel c_61 = {c4.out, assembler1.in_4};
channel c_62 = {c5.out, assembler2.in_1};
channel c_63 = {c6.out, assembler2.in_2};
channel c_64 = {c7.out, assembler2.in_3};
channel c_65 = {c8.out, assembler2.in_4};
channel c_66 = {c9.out, assembler3.in_1};
channel c_67 = {c10.out, assembler3.in_2};
channel c_68 = {c11.out, assembler3.in_3};
channel c_69 = {c12.out, assembler3.in_4};
channel c_70 = {c13.out, assembler4.in_1};
channel c_71 = {c14.out, assembler4.in_2};
channel c_72 = {c15.out, assembler4.in_3};
channel c_73 = {c16.out, assembler4.in_4};

AssemDistri control;
channel c_74 = {assembler1.out, control.in_1};
channel c_75 = {assembler2.out, control.in_2};
channel c_76 = {assembler3.out, control.in_3};
channel c_77 = {assembler4.out, control.in_4};

Distribute levellevel1 = {level = Level.A2};
Distribute levellevel2 = {level = Level.A2};
Distribute levellevel3 = {level = Level.A2};
Distribute levellevel4 = {level = Level.A2};
channel c_78 = {control.out_1, levellevel1.in};
channel c_79 = {control.out_2, levellevel2.in};
channel c_80 = {control.out_3, levellevel3.in};
channel c_81 = {control.out_4, levellevel4.in};

channel c_82 = {levellevel1.out_1, a1.in_c};
channel c_83 = {levellevel1.out_2, a2.in_c};
channel c_84 = {levellevel1.out_3, a3.in_c};
channel c_85 = {levellevel1.out_4, a4.in_c};
channel c_86 = {levellevel2.out_1, a5.in_c};
channel c_87 = {levellevel2.out_2, a6.in_c};
channel c_88 = {levellevel2.out_3, a7.in_c};
channel c_89 = {levellevel2.out_4, a8.in_c};
channel c_90 = {levellevel3.out_1, a9.in_c};
channel c_91 = {levellevel3.out_2, a10.in_c};
channel c_92 = {levellevel3.out_3, a11.in_c};
channel c_93 = {levellevel3.out_4, a12.in_c};
channel c_94 = {levellevel4.out_1, a13.in_c};
channel c_95 = {levellevel4.out_2, a14.in_c};
channel c_96 = {levellevel4.out_3, a15.in_c};
channel c_97 = {levellevel4.out_4, a16.in_c};

Assembler assembler5 = {level=2};
Assembler assembler6 = {level=2};
Assembler assembler7 = {level=2};
Assembler assembler8 = {level=2};
channel c_98 = {a1.out, assembler5.in_1};
channel c_99 = {a2.out, assembler5.in_2};
channel c_100 = {a3.out, assembler5.in_3};
channel c_101 = {a4.out, assembler5.in_4};
channel c_102 = {a5.out, assembler6.in_1};
channel c_103 = {a6.out, assembler6.in_2};
channel c_104 = {a7.out, assembler6.in_3};
channel c_105 = {a8.out, assembler6.in_4};
channel c_106 = {a9.out, assembler7.in_1};
channel c_107 = {a10.out, assembler7.in_2};
channel c_108 = {a11.out, assembler7.in_3};
channel c_109 = {a12.out, assembler7.in_4};
channel c_110 = {a13.out, assembler8.in_1};
channel c_111 = {a14.out, assembler8.in_2};
channel c_112 = {a15.out, assembler8.in_3};
channel c_113 = {a16.out, assembler8.in_4};

Assembler assembler9 = {level=3};
channel c_114 = {assembler5.out, assembler9.in_1};
channel c_115 = {assembler6.out, assembler9.in_2};
channel c_116 = {assembler7.out, assembler9.in_3};
channel c_117 = {assembler8.out, assembler9.in_4};

channel c_118 = {assembler9.out, Vio.in[0]};
}
design Multiplication {	
		Root root;
}
